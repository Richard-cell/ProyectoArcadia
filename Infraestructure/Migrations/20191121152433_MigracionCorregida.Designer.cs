// <auto-generated />
using System;
using Infraestructure.Contextos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infraestructure.Migrations
{
    [DbContext(typeof(ColegioContext))]
    [Migration("20191121152433_MigracionCorregida")]
    partial class MigracionCorregida
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Entidades.Acudiente", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("CorreoElectronico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstratoSocial")
                        .HasColumnType("int");

                    b.Property<long>("EstudianteId")
                        .HasColumnType("bigint");

                    b.Property<int?>("MatriculaId")
                        .HasColumnType("int");

                    b.Property<string>("Parentezco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerApellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoApellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<long>("Telefono")
                        .HasColumnType("bigint");

                    b.Property<string>("TipoDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EstudianteId")
                        .IsUnique();

                    b.HasIndex("MatriculaId")
                        .IsUnique()
                        .HasFilter("[MatriculaId] IS NOT NULL");

                    b.ToTable("Acudiente");
                });

            modelBuilder.Entity("Domain.Entidades.Asignatura", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("NombreAsignatura")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Asignatura");
                });

            modelBuilder.Entity("Domain.Entidades.Boletin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Boletin");
                });

            modelBuilder.Entity("Domain.Entidades.Cuota", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EstadoCuota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaLimitePagoCuota")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaPagoCuota")
                        .HasColumnType("datetime2");

                    b.Property<int>("MesCuota")
                        .HasColumnType("int");

                    b.Property<int>("PensionEscolarId")
                        .HasColumnType("int");

                    b.Property<float>("ValorCuota")
                        .HasColumnType("real");

                    b.Property<float>("ValorTotalAPagar")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("PensionEscolarId");

                    b.ToTable("Cuota");
                });

            modelBuilder.Entity("Domain.Entidades.Curso", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("GradoCurso")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Curso");
                });

            modelBuilder.Entity("Domain.Entidades.Docente", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<int>("AñosExperiencia")
                        .HasColumnType("int");

                    b.Property<string>("CorreoElectronico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<int>("EstratoSocial")
                        .HasColumnType("int");

                    b.Property<string>("PrimerApellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoApellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<long>("Telefono")
                        .HasColumnType("bigint");

                    b.Property<string>("TipoDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Docente");
                });

            modelBuilder.Entity("Domain.Entidades.DocenteAsignatura", b =>
                {
                    b.Property<int>("AsignaturaId")
                        .HasColumnType("int");

                    b.Property<long>("DocenteId")
                        .HasColumnType("bigint");

                    b.HasKey("AsignaturaId", "DocenteId");

                    b.HasIndex("DocenteId");

                    b.ToTable("DocenteAsignatura");
                });

            modelBuilder.Entity("Domain.Entidades.DocenteCurso", b =>
                {
                    b.Property<int>("CursoId")
                        .HasColumnType("int");

                    b.Property<long>("DocenteId")
                        .HasColumnType("bigint");

                    b.HasKey("CursoId", "DocenteId");

                    b.HasIndex("DocenteId");

                    b.ToTable("DocenteCurso");
                });

            modelBuilder.Entity("Domain.Entidades.Estudiante", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("CorreoElectronico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CursoId")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstratoSocial")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("LugarEntreHermanos")
                        .HasColumnType("int");

                    b.Property<string>("LugarNacimiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MatriculaId")
                        .HasColumnType("int");

                    b.Property<int>("NumeroHermanos")
                        .HasColumnType("int");

                    b.Property<int?>("PensionEscolarId")
                        .HasColumnType("int");

                    b.Property<string>("PrimerApellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PuntajeSisben")
                        .HasColumnType("real");

                    b.Property<string>("RH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoApellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeguroSocial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<long>("Telefono")
                        .HasColumnType("bigint");

                    b.Property<string>("TipoDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.HasIndex("MatriculaId")
                        .IsUnique();

                    b.HasIndex("PensionEscolarId");

                    b.ToTable("Estudiante");
                });

            modelBuilder.Entity("Domain.Entidades.Matricula", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("EstadoMatricula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaMatricula")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumeroDocumentosAdjuntados")
                        .HasColumnType("int");

                    b.Property<float>("ValorMatricula")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Matricula");
                });

            modelBuilder.Entity("Domain.Entidades.Nota", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("AsignaturaId")
                        .HasColumnType("int");

                    b.Property<int?>("BoletinId")
                        .HasColumnType("int");

                    b.Property<int>("EstudianteId")
                        .HasColumnType("int");

                    b.Property<long?>("EstudianteId1")
                        .HasColumnType("bigint");

                    b.Property<float>("NotaCuartoPeriodo")
                        .HasColumnType("real");

                    b.Property<float>("NotaPrimerPeriodo")
                        .HasColumnType("real");

                    b.Property<float>("NotaSegundoPeriodo")
                        .HasColumnType("real");

                    b.Property<float>("NotaTercerPeriodo")
                        .HasColumnType("real");

                    b.Property<float>("PromedioNota")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("AsignaturaId");

                    b.HasIndex("BoletinId");

                    b.HasIndex("EstudianteId1");

                    b.ToTable("Nota");
                });

            modelBuilder.Entity("Domain.Entidades.PensionEscolar", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("EstudianteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaInicioPension")
                        .HasColumnType("datetime2");

                    b.Property<float>("ValorPension")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("PensionEscolar");
                });

            modelBuilder.Entity("Domain.Entidades.Acudiente", b =>
                {
                    b.HasOne("Domain.Entidades.Estudiante", null)
                        .WithOne("RepresentanteLegal")
                        .HasForeignKey("Domain.Entidades.Acudiente", "EstudianteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entidades.Matricula", null)
                        .WithOne("Acudiente")
                        .HasForeignKey("Domain.Entidades.Acudiente", "MatriculaId");
                });

            modelBuilder.Entity("Domain.Entidades.Cuota", b =>
                {
                    b.HasOne("Domain.Entidades.PensionEscolar", null)
                        .WithMany("ListaCuotas")
                        .HasForeignKey("PensionEscolarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entidades.DocenteAsignatura", b =>
                {
                    b.HasOne("Domain.Entidades.Asignatura", "Asignatura")
                        .WithMany("ListaDocenteAsignaturas")
                        .HasForeignKey("AsignaturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entidades.Docente", "Docente")
                        .WithMany("ListaDocenteAsignaturas")
                        .HasForeignKey("DocenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entidades.DocenteCurso", b =>
                {
                    b.HasOne("Domain.Entidades.Curso", "Curso")
                        .WithMany("ListaDocenteCurso")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entidades.Docente", "Docente")
                        .WithMany("ListaDocenteCurso")
                        .HasForeignKey("DocenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entidades.Estudiante", b =>
                {
                    b.HasOne("Domain.Entidades.Curso", null)
                        .WithMany("ListaEstudiantes")
                        .HasForeignKey("CursoId");

                    b.HasOne("Domain.Entidades.Matricula", null)
                        .WithOne("Estudiante")
                        .HasForeignKey("Domain.Entidades.Estudiante", "MatriculaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entidades.PensionEscolar", "PensionEscolar")
                        .WithMany()
                        .HasForeignKey("PensionEscolarId");
                });

            modelBuilder.Entity("Domain.Entidades.Nota", b =>
                {
                    b.HasOne("Domain.Entidades.Asignatura", null)
                        .WithMany("ListaNotas")
                        .HasForeignKey("AsignaturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entidades.Boletin", null)
                        .WithMany("ListaNotas")
                        .HasForeignKey("BoletinId");

                    b.HasOne("Domain.Entidades.Estudiante", null)
                        .WithMany("ListaNotas")
                        .HasForeignKey("EstudianteId1");
                });
#pragma warning restore 612, 618
        }
    }
}
